//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// The build.gradle is a part of project utopia, under MIT License.
// See https://opensource.org/licenses/MIT for license information.
// Copyright (c) 2021 moe-org All rights reserved.
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardOpenOption

// 插件设置
plugins {
    // java 库
    id 'java-library'

}

// 依赖
dependencies {
    // netty
    api "io.netty:netty-all:$nettyVersion"

    // jackson
    api "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"

    // 引入HOCON
    api "com.typesafe:config:$hoconVersion"

    // 日志库
    // 我们已经提供了对外日志接口，所以不开放相关库
    implementation "org.apache.logging.log4j:log4j-api:$log4j2Version"
    implementation "org.apache.logging.log4j:log4j-core:$log4j2Version"

    // 日志彩色输出支持
    implementation group: 'org.fusesource.jansi', name: 'jansi', version: '2.4.0'
}

ext {
    // 临时目录
    TEMP_PROPERTY_FILE_DIR = project.buildDir.toString() + "/utopia-build-temp/"

    // 版本号文件
    UTOPIA_VERSION_PROPERTY_FILE = "utopia-version.properties"

    // 日志配置文件
    UTOPIA_LOG_CONFIGURE_FILE = "utopia-default-log4j2-config.xml"

    // 源文件资源文件夹
    UTOPIA_DEFAULT_MAIN_RESOURCE_DIR = "src/main/resources"
}

// 设置源集
sourceSets {
    main {
        resources {
            srcDirs = [UTOPIA_DEFAULT_MAIN_RESOURCE_DIR, TEMP_PROPERTY_FILE_DIR]
        }
    }
}

// 一些辅助函数
void createTempPropertyFileDir() {
    java.nio.file.Path path = Paths.get(TEMP_PROPERTY_FILE_DIR)

    if (!Files.exists(path)) {
        Files.createDirectories(path)
    }
}

void createPropertyTxtFile(java.nio.file.Path dir, String content) {
    createTempPropertyFileDir()

    Files.writeString(
            dir,
            content,
            StandardOpenOption.WRITE,
            StandardOpenOption.TRUNCATE_EXISTING)
}

void createPropertyFile(java.nio.file.Path dir, Map<String, String> content) {
    createTempPropertyFileDir()

    if (!Files.exists(dir)) {
        Files.createFile(dir)
    }

    StringBuilder stringBuilder = new StringBuilder()

    stringBuilder.append("# generated by utopia. :-)")

    content.forEach(
            (key, value) -> {
                stringBuilder
                        .append(key)
                        .append('=')
                        .append(value)
                        .append('\n')
            }
    )

    createPropertyTxtFile(dir, stringBuilder.toString())
}

// 依赖任务
// 创建版本号文件
task createProperties {
    createPropertyFile(
            Paths.get("$TEMP_PROPERTY_FILE_DIR/$UTOPIA_VERSION_PROPERTY_FILE"),
            new HashMap<String, String>() {
                {
                    put("UtopiaVersion", version)
                }
            }
    )
}

processResources {
    dependsOn createProperties
}

